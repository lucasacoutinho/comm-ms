{
  "compilerOptions": {
    "lib": ["ES5", "ES6", "ES2020", "ESNext", "DOM"],
    "resolveJsonModule": true,
    "outDir": "./dist" /* Specify an output folder for all emitted files. */,
    "removeComments": true /* Strips all comments from TypeScript files when converting into JavaScript- you rarely read compiled code so this saves space */,
    "target": "ES2020" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "module": "commonjs" /* Specify what module code is generated. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "moduleResolution": "node" /* Pretty much always node for modern JS. Other option is "classic" */,
    "experimentalDecorators": true /* Enable experimental support for TC39 stage 2 draft decorators. */,
    "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "sourceRoot": "/" /* Specify the location where a debugger should locate TypeScript files instead of relative source locations. */,
    "strict": true /* Enable all strict type-checking options. */,
    "strictPropertyInitialization": false /* Check for class properties that are declared but not set in the constructor. */,
    "alwaysStrict": true /* Ensures that your files are parsed in the ECMAScript strict mode, and emit “use strict” for each source file. */,
    "strictNullChecks": true /* When strictNullChecks is true, null and undefined have their own distinct types and you’ll get a type error if you try to use them where a concrete value is expected. */,
    "allowUnreachableCode": false /* pick up dead code paths */,
    "noImplicitAny": true /* In some cases where no type annotations are present, TypeScript will fall back to a type of any for a variable when it cannot infer the type. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "typeRoots": [
      "src/types",
      "./node_modules/@types"
    ] /* Specify multiple folders that act like `./node_modules/@types`. */,
    "noImplicitReturns": true,
    "noUncheckedIndexedAccess": true /* Accessing index must always check for undefined */,
    "noUnusedLocals": true /* Report errors on unused local variables. */,
    "noUnusedParameters": true /* Report errors on unused parameters in functions */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */
  },
  "exclude": ["node_modules"],
  "include": ["./src/**/*.ts"]
}
